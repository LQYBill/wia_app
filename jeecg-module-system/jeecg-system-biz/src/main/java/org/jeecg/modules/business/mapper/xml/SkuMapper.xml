<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jeecg.modules.business.mapper.SkuMapper">

    <delete id="deleteByMainId" parameterType="java.lang.String">
        DELETE
        FROM sku
        WHERE product_id = #{mainId}    </delete>

    <select id="selectByMainId" parameterType="java.lang.String" resultType="org.jeecg.modules.business.entity.Sku">
        SELECT *
        FROM sku
        WHERE product_id = #{mainId}    </select>


    <sql id="selectSkuByClientId">
        SELECT *
        FROM inventory_record i
        <if test="clientId != null">
            WHERE i.client_id = #{clientId}
        </if>
    </sql>

    <select id="pageSkuByClientId" resultType="org.jeecg.modules.business.vo.inventory.InventoryRecord">
        <include refid="selectSkuByClientId"/>
        LIMIT #{offset}, #{size}
    </select>

    <select id="countTotal" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM (<include refid="selectSkuByClientId"/>) AS t
    </select>

    <update id="addSkuQuantity" parameterType="map">
        UPDATE sku
        SET purchasing_amount = CASE id
        <foreach collection="quantities" close="" open="" index="ID" item="quantity" separator="">
            WHEN #{ID} THEN purchasing_amount + #{quantity}
        </foreach>
        END
        WHERE id IN
        <foreach collection="quantities" index="ID" item="quantity" open="(" close=")" separator=",">
            #{ID}
        </foreach>
    </update>

    <update id="batchUpdateStock" parameterType="java.util.List">
        UPDATE sku
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="purchasing_amount =case" suffix="end,">
                <foreach collection="list" item="i" index="index">
                    <if test="i.purchasingAmount!=null">
                        when erp_code=#{i.erpCode} then #{i.purchasingAmount}
                    </if>
                </foreach>
            </trim>
            <trim prefix="available_amount =case" suffix="end,">
                <foreach collection="list" item="i" index="index">
                    <if test="i.availableAmount!=null">
                        when erp_code=#{i.erpCode} then #{i.availableAmount}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_by =case" suffix="end,">
                <foreach collection="list" item="i" index="index">
                    <if test="i.updateBy!=null">
                        when erp_code=#{i.erpCode} then #{i.updateBy}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_time =case" suffix="end,">
                <foreach collection="list" item="i" index="index">
                    <if test="i.updateTime!=null">
                        when erp_code=#{i.erpCode} then #{i.updateTime}
                    </if>
                </foreach>
            </trim>
        </trim>
        WHERE
        <foreach collection="list" separator="or" item="i" index="index" >
            erp_code=#{i.erpCode}
        </foreach>
    </update>

    <select id="selectByErpCode" parameterType="java.lang.String" resultType="org.jeecg.modules.business.entity.Sku">
        SELECT *
        FROM sku
        WHERE erp_code IN
        <foreach collection="erpCodes" index="erpCode" item="quantity" open="(" close=")" separator=",">
            #{erpCode}
        </foreach>
    </select>
    <select id="searchFirstMissingPriceSku" resultType="java.lang.String">
        SELECT s.id
        FROM sku s
        LEFT JOIN sku_price sp
            ON s.id = sp.sku_id
        WHERE sp.id IS NULL
        AND s.id IN
        <foreach collection="skuIds" separator="," open="(" close=")" index="index" item="id">
            #{id}
        </foreach>
        LIMIT 1;
    </select>
    <select id="listErpCodesByIds" resultType="java.lang.String">
        SELECT erp_code
        FROM sku
        WHERE id IN
        <foreach collection="skuIds" separator="," open="(" close=")" index="index" item="skuId">
            #{skuId}
        </foreach>;
    </select>

    <select id="findMissingSkusInNotShippedOrders" resultType="org.jeecg.modules.business.entity.Sku">
        WITH notShippedOrders AS (
            SELECT po.id
            FROM platform_order po
                     JOIN shop s ON po.shop_id = s.id
                     JOIN client c ON s.owner_id = c.id
                     JOIN client_category cc ON c.client_category_id = cc.id
            WHERE po.erp_status IN (1,2)
                AND cc.name = 'self-service'
                AND po.order_time &gt;= #{start}
            ORDER BY po.order_time
        ),
             contentWithMissingSku AS (
                 SELECT *
                 FROM platform_order_content
                 WHERE platform_order_id IN (SELECT id FROM notShippedOrders)
                   AND erp_status IN ('1','2')
                   AND product_available = 0
                   AND virtual_product_available = 0
             ),
             missingSkuIds AS (
                 SELECT DISTINCT sku_id FROM contentWithMissingSku
             )
        SELECT id, erp_code
        FROM sku
                 JOIN missingSkuIds ON sku.id = missingSkuIds.sku_id;
    </select>

    <select id="getSkuQuantitiesFromOrderIds" resultType="org.jeecg.modules.business.vo.SkuQuantity">
        SELECT sku_id as ID, sku.erp_code as erp_code, SUM(quantity) AS quantity
        FROM platform_order_content
        JOIN sku ON platform_order_content.sku_id = sku.id
        WHERE platform_order_id IN
        <foreach collection="orderIds" separator="," open="(" close=")" index="index" item="orderId">
            #{orderId}
        </foreach>
        AND erp_status IN ('1','2','3')
        AND product_available = 0
        AND virtual_product_available = 0
        GROUP BY sku_id;
    </select>
    <select id="fetchSkusByClient" resultType="org.jeecg.modules.business.vo.SkuOrderPage">
        WITH qtyInOrdersNotShipped AS (
            SELECT sku_id as ID, SUM(quantity) AS quantity
            FROM platform_order_content poc
            JOIN platform_order po ON poc.platform_order_id = po.id
            JOIN shop s ON po.shop_id = s.id
            JOIN client c ON s.owner_id = c.id
            WHERE c.id = #{clientId}
            AND po.erp_status IN ('1','2')
                AND poc.erp_status IN ('1','2')
            GROUP BY sku_id
        )
        SELECT s.id,
               s.erp_code,
               p.en_name                                                     as productEn,
               p.zh_name                                                     as product,
               s.purchasing_amount,
               s.available_amount,
               qtyInOrdersNotShipped.quantity                                          as qtyInOrdersNotShipped,
               IF(s.available_amount IS NULL, 0, s.available_amount) + IF(s.purchasing_amount IS NULL, 0, s.purchasing_amount) - IF(qtyInOrdersNotShipped.quantity IS NULL, 0, qtyInOrdersNotShipped.quantity) as stock,
               s.image_source,
               s.service_fee,
               IF(sp.price_rmb IS NULL, sp.price,
                  (
                      ROUND(
                              sp.price_rmb /
                              (SELECT rate
                               FROM exchange_rates
                               WHERE original_currency = 'EUR' AND target_currency = 'RMB'
                               ORDER BY create_time DESC LIMIT 1)
                      ,2)
                  )
               )                                                             as sku_price,
               sp.threshold                                                  as discount_moq,
               IF(sp.price_rmb IS NULL, sp.discounted_price,
                  (
                      ROUND(
                              sp.discounted_price_rmb /
                              (SELECT rate
                               FROM exchange_rates
                               WHERE target_currency = 'EUR' AND original_currency = 'RMB'
                               ORDER BY create_time DESC LIMIT 1)
                      ,2)
                   )
               )                                                             as discounted_price,
               s7.quantity                                                   as sales_last_week,
               s28.quantity                                                  as sales_four_weeks,
               s42.quantity                                                  as sales_six_weeks
        FROM sku s
                 JOIN client_sku cs ON s.id = cs.sku_id
                 JOIN product p ON s.product_id = p.id
                 LEFT JOIN sku_price sp ON s.id = sp.sku_id
                 LEFT JOIN sales_28 s28 ON s.id = s28.sku_id
                 LEFT JOIN sales_42 s42 ON s.id = s42.sku_id
                 LEFT JOIN sales_7 s7 ON s.id = s7.sku_id
                 LEFT JOIN qtyInOrdersNotShipped ON s.id = qtyInOrdersNotShipped.ID
        WHERE cs.client_id = #{clientId}
    </select>
    <select id="getInventoryByInvoiceNumber" resultType="org.jeecg.modules.business.vo.SkuOrderPage">
        WITH skusFromInvoice AS (
            SELECT sku_id, quantity
            FROM purchase_order_sku pos
            JOIN purchase_order po ON pos.purchase_order_id = po.id
            WHERE po.invoice_number = #{invoiceNumber}
        ),
            qtyInOrdersNotShipped AS (
            SELECT sku_id as ID, SUM(quantity) AS quantity
            FROM platform_order_content poc
                     JOIN platform_order po ON poc.platform_order_id = po.id
                     JOIN shop s ON po.shop_id = s.id
                     JOIN client c ON s.owner_id = c.id
            WHERE sku_id IN (SELECT sku_id FROM skusFromInvoice)
              AND po.erp_status IN ('1','2')
              AND poc.erp_status IN ('1','2')
            GROUP BY sku_id
        )
        SELECT s.id,
               s.erp_code,
               p.en_name                                                     as productEn,
               p.zh_name                                                     as product,
               sfi.quantity                                                  as qtyOrdered,
               s.purchasing_amount                                           as purchasing_amount,
               s.available_amount                                            as available_amount,
               IFNULL(qtyInOrdersNotShipped.quantity, 0)                     as qtyInOrdersNotShipped,
               IF(s.available_amount IS NULL, 0, s.available_amount)
                   + IF(s.purchasing_amount IS NULL, 0, s.purchasing_amount)
                   - IF(qtyInOrdersNotShipped.quantity IS NULL, 0, qtyInOrdersNotShipped.quantity)
                                                                             as stock,
               s.image_source                                                as image_source,
               s.service_fee                                                 as service_fee,
               IF(sp.price_rmb IS NULL, sp.price,
                  (
                      ROUND(
                              sp.price_rmb /
                              (SELECT rate
                               FROM exchange_rates
                               WHERE original_currency = 'EUR' AND target_currency = 'RMB'
                               ORDER BY create_time DESC LIMIT 1)
                          ,2)
                      )
               )                                                             as sku_price,
               sp.threshold                                                  as discount_moq,
               IF(sp.price_rmb IS NULL, sp.discounted_price,
                  (
                      ROUND(
                              sp.discounted_price_rmb /
                              (SELECT rate
                               FROM exchange_rates
                               WHERE target_currency = 'EUR' AND original_currency = 'RMB'
                               ORDER BY create_time DESC LIMIT 1)
                          ,2)
                      )
               )                                                             as discounted_price,
               IFNULL(s7.quantity, 0)                                        as sales_last_week,
               IFNULL(s28.quantity, 0)                                       as sales_four_weeks,
               IFNULL(s42.quantity, 0)                                       as sales_six_weeks
        FROM sku s
                 JOIN product p ON s.product_id = p.id
                 LEFT JOIN sku_price sp ON s.id = sp.sku_id
                 LEFT JOIN sales_28 s28 ON s.id = s28.sku_id
                 LEFT JOIN sales_42 s42 ON s.id = s42.sku_id
                 LEFT JOIN sales_7 s7 ON s.id = s7.sku_id
                 LEFT JOIN qtyInOrdersNotShipped ON s.id = qtyInOrdersNotShipped.ID
                 JOIN skusFromInvoice sfi ON s.id = sfi.sku_id
        WHERE s.id IN (SELECT sku_id FROM skusFromInvoice)
        GROUP BY s.id;
    </select>
    <select id="getIdFromErpCode" resultType="java.lang.String">
        SELECT id
        FROM sku
        WHERE erp_code = #{erpCode};
    </select>
    <select id="listSkus" resultType="org.jeecg.modules.business.entity.Sku">
        SELECT *
        FROM sku
        JOIN client_sku cs ON sku.id = cs.sku_id
        JOIN client c ON cs.client_id = c.id
        WHERE c.active = 1;
    </select>
    <select id="getByErpCode" resultType="org.jeecg.modules.business.entity.Sku">
        SELECT * FROM sku
        WHERE erp_code = #{erpCode};
    </select>
    <update id="updateBatchStockByIds">
        UPDATE sku
        SET update_by = 'mabang api',
            update_time = NOW(),
            available_amount =
            case id
                <foreach collection="skus" item="sku" index="index" separator=" ">
                    when #{sku.id} then #{sku.availableAmount}
                </foreach>
            end,
            purchasing_amount =
            case id
                <foreach collection="skus" item="sku" index="index" separator=" ">
                    when #{sku.id} then #{sku.purchasingAmount}
                </foreach>
            end
        WHERE id IN
        <foreach collection="skus" item="sku" index="index" separator="," open="(" close=")">
            #{sku.id}
        </foreach>
    </update>
</mapper>
